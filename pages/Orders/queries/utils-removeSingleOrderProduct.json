{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "removeSingleOrderProduct",
    "fullyQualifiedName": "utils.removeSingleOrderProduct",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Orders",
    "collectionId": "Orders_utils",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "currentItem => {\n  const orderProducts = appsmith.store.orderProducts || [];\n  const orderProduct = orderProducts.filter(p => p.product.Id === currentItem.Id);\n  if (orderProduct && orderProduct.length > 0) {\n    if (orderProduct[0].count === 1) {\n      const removeSingleProduct = orderProducts.filter(p => p.product.Id !== currentItem.Id);\n      return storeValue('orderProducts', removeSingleProduct);\n    } else {\n      const removeSingleProduct = orderProducts.filter(p => p.product.Id !== currentItem.Id);\n      return storeValue('orderProducts', [...removeSingleProduct, {\n        product: currentItem,\n        count: orderProduct[0].count - 1\n      }]);\n    }\n  }\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [
        {
          "name": "currentItem"
        }
      ],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "currentItem => {\n  const orderProducts = appsmith.store.orderProducts || [];\n  const orderProduct = orderProducts.filter(p => p.product.Id === currentItem.Id);\n  if (orderProduct && orderProduct.length > 0) {\n    if (orderProduct[0].count === 1) {\n      const removeSingleProduct = orderProducts.filter(p => p.product.Id !== currentItem.Id);\n      return storeValue('orderProducts', removeSingleProduct);\n    } else {\n      const removeSingleProduct = orderProducts.filter(p => p.product.Id !== currentItem.Id);\n      return storeValue('orderProducts', [...removeSingleProduct, {\n        product: currentItem,\n        count: orderProduct[0].count - 1\n      }]);\n    }\n  }\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Orders_utils.removeSingleOrderProduct",
  "deleted": false,
  "gitSyncId": "63f48eafdb642f4c0d66c3aa_6437beca5a787709661d74fb"
}